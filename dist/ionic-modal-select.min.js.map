{"version":3,"sources":["webpack:///ionic-modal-select.min.js","webpack:///webpack/bootstrap cd92435a6fdee0dd38df","webpack:///./src/main.js","webpack:///./src/ionic-modal-select.js","webpack:///./src/modal-template-multiple.html","webpack:///./src/modal-template.html"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","compile","$compile","scope","iElement","iAttrs","x","$watch","$eval","value","html","contents","compileOnce","modalSelect","$ionicModal","$timeout","$filter","$parse","$templateCache","modalTemplateMultiple","modalTemplate","restrict","require","initialOptions","optionGetter","searchFilters","searchProperties","onSelect","onSearch","onReset","onClose","link","ngModelController","transclude","initialOptionsSetup","nv","multiple","allOptions","map","item","idx","angular","copy","options","updateListMode","useCollectionRepeat","shortList","length","shortListBreak","ui","parseInt","setFromProperty","optionProperty","onOptionSelect","clearSearchOnSelect","isChecked","multipleNullValue","modalTitle","okButton","hideReset","hideFooter","resetButton","cancelButton","loadListMessage","modalClass","headerFooterClass","selectedClass","itemClass","searchTemplate","hasSearch","searchValue","searchPlaceholder","subHeaderClass","cancelSearchButton","optionsExpression","match","Error","listExpr","listGetter","s","ov","$watchCollection","opt","querySelector","name","message","toString","this","inner","element","Element","prototype","remove","parentNode","removeChild","notFound","$render","$viewValue","getSelectedValue","option","val","undefined","setOption","oldValue","$setViewValue","newValue","modal","hide","then","showList","setFilter","filterId","forEach","filter","active","query","unsetValue","isFunction","setValues","checkedItems","v","k","push","oldValues","vals","unsetValues","closeModal","compareValues","a","b","equals","modalTpl","fromTemplate","get","hiddenCb","$on","on","show","whatToSearch","filteredOpts","actual","expected","_typeof","i","toLowerCase","indexOf","oldLen","newOpts","originalItem","find","it","clearSearch","copyOpt","$inject","Symbol","iterator","obj","constructor","directive"],"mappings":"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","file":"ionic-modal-select.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\t__webpack_require__(1);\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tcompile.$inject = [\"$compile\"];\n\tmodalSelect.$inject = [\"$ionicModal\", \"$timeout\", \"$filter\", \"$parse\", \"$templateCache\"];\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\t/*!\n\t * Copyright 2015 Inmagik SRL.\n\t * http://www.inmagik.com/\n\t *\n\t * ionic-modal-select, v1.3.2\n\t * Modal select directive for Ionic framework.\n\t *\n\t * By @bianchimro\n\t *\n\t * Licensed under the MIT license. Please see LICENSE for more information.\n\t *\n\t */\n\t\n\tangular.module('ionic-modal-select', []).directive('compile', compile).directive('modalSelect', modalSelect);\n\t\n\tfunction compile($compile) {\n\t\treturn function (scope, iElement, iAttrs) {\n\t\t\tvar x = scope.$watch(function (scope) {\n\t\t\t\t// watch the 'compile' expression for changes\n\t\t\t\treturn scope.$eval(iAttrs.compile);\n\t\t\t}, function (value) {\n\t\t\t\t// when the 'compile' expression changes\n\t\t\t\t// assign it into the current DOM\n\t\t\t\tiElement.html(value);\n\t\n\t\t\t\t// compile the new DOM and link it to the current\n\t\t\t\t// scope.\n\t\t\t\t// NOTE: we only compile .childNodes so that\n\t\t\t\t// we don't get into infinite loop compiling ourselves\n\t\t\t\t$compile(iElement.contents())(scope);\n\t\n\t\t\t\t//deactivate watch if \"compile-once\" is set to \"true\"\n\t\t\t\tif (iAttrs.compileOnce === 'true') {\n\t\t\t\t\tx();\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t}\n\t\n\tfunction modalSelect($ionicModal, $timeout, $filter, $parse, $templateCache) {\n\t\n\t\tvar modalTemplateMultiple = __webpack_require__(2);\n\t\tvar modalTemplate = __webpack_require__(3);\n\t\n\t\treturn {\n\t\t\trestrict: 'A',\n\t\t\trequire: 'ngModel',\n\t\t\tscope: {\n\t\t\t\tinitialOptions: \"=options\",\n\t\t\t\toptionGetter: \"&\",\n\t\t\t\tsearchFilters: \"=searchFilters\",\n\t\t\t\tsearchProperties: '=',\n\t\t\t\tonSelect: \"&\",\n\t\t\t\tonSearch: \"&\",\n\t\t\t\tonReset: \"&\",\n\t\t\t\tonClose: \"&\"\n\t\t\t},\n\t\t\tlink: function link(scope, iElement, iAttrs, ngModelController, transclude) {\n\t\n\t\t\t\tvar shortList = true;\n\t\t\t\tvar shortListBreak = iAttrs.shortListBreak ? parseInt(iAttrs.shortListBreak) : 10;\n\t\t\t\tvar setFromProperty = iAttrs.optionProperty;\n\t\t\t\tvar onOptionSelect = iAttrs.optionGetter;\n\t\t\t\tvar clearSearchOnSelect = iAttrs.clearSearchOnSelect !== \"false\" ? true : false;\n\t\t\t\tvar searchProperties = scope.searchProperties ? scope.searchProperties : false;\n\t\n\t\t\t\t//multiple values settings.\n\t\t\t\tvar multiple = iAttrs.multiple ? true : false;\n\t\t\t\tif (multiple) {\n\t\t\t\t\tscope.isChecked = {};\n\t\t\t\t}\n\t\t\t\tvar multipleNullValue = iAttrs.multipleNullValue ? scope.$eval(iAttrs.multipleNullValue) : [];\n\t\n\t\t\t\tscope.ui = {\n\t\t\t\t\tmodalTitle: iAttrs.modalTitle || 'Select an option',\n\t\t\t\t\tokButton: iAttrs.okButton || 'OK',\n\t\t\t\t\thideReset: iAttrs.hideReset !== \"true\" ? false : true,\n\t\t\t\t\thideFooter: iAttrs.hideFooter === \"true\" ? true : true,\n\t\t\t\t\tresetButton: iAttrs.resetButton || 'Reset',\n\t\t\t\t\tcancelButton: iAttrs.cancelButton || 'Cancel',\n\t\t\t\t\tloadListMessage: iAttrs.loadListMessage || 'Loading',\n\t\t\t\t\tmodalClass: iAttrs.modalClass || '',\n\t\t\t\t\theaderFooterClass: iAttrs.headerFooterClass || 'bar-stable',\n\t\t\t\t\tvalue: null,\n\t\t\t\t\tselectedClass: iAttrs.selectedClass || 'option-selected',\n\t\t\t\t\titemClass: iAttrs.itemClass || 'item item-text-wrap',\n\t\t\t\t\tsearchTemplate: iAttrs.searchTemplate || (multiple ? modalTemplateMultiple : modalTemplate),\n\t\n\t\t\t\t\t//search stuff\n\t\t\t\t\thasSearch: iAttrs.hasSearch !== \"true\" ? false : true,\n\t\t\t\t\tsearchValue: '',\n\t\t\t\t\tsearchPlaceholder: iAttrs.searchPlaceholder || 'Search',\n\t\t\t\t\tsubHeaderClass: iAttrs.subHeaderClass || 'bar-stable',\n\t\t\t\t\tcancelSearchButton: iAttrs.cancelSearchButton || 'Clear'\n\t\n\t\t\t\t};\n\t\n\t\t\t\tvar allOptions = [];\n\t\t\t\tscope.options = [];\n\t\n\t\t\t\tif (iAttrs.optionsExpression) {\n\t\t\t\t\tvar optionsExpression = iAttrs.optionsExpression;\n\t\t\t\t\tvar match = optionsExpression.match(/^\\s*([\\s\\S]+?)\\s+in\\s+([\\s\\S]+?)(?:\\s+track\\s+by\\s+([\\s\\S]+?))?\\s*$/);\n\t\t\t\t\tif (!match) {\n\t\t\t\t\t\tthrow new Error(\"collection-repeat expected expression in form of '_item_ in \" + \"_collection_[ track by _id_]' but got '\" + iAttrs.optionsExpression + \"'.\");\n\t\t\t\t\t}\n\t\t\t\t\t//var keyExpr = match[1];\n\t\t\t\t\tvar listExpr = match[2];\n\t\t\t\t\tvar listGetter = $parse(listExpr);\n\t\t\t\t\tvar s = iElement.scope();\n\t\n\t\t\t\t\tscope.$watch(function () {\n\t\t\t\t\t\treturn listGetter(s);\n\t\t\t\t\t}, function (nv, ov) {\n\t\t\t\t\t\tinitialOptionsSetup(nv);\n\t\t\t\t\t\tupdateListMode();\n\t\t\t\t\t}, true);\n\t\t\t\t} else {\n\t\t\t\t\tscope.$watchCollection('initialOptions', function (nv) {\n\t\t\t\t\t\tinitialOptionsSetup(nv);\n\t\t\t\t\t\tupdateListMode();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\n\t\t\t\t//#TODO: this is due to different single vs multiple template\n\t\t\t\t//but adds lots of complexity here and in search\n\t\t\t\tfunction initialOptionsSetup(nv) {\n\t\t\t\t\tnv = nv || [];\n\t\t\t\t\tif (!multiple) {\n\t\t\t\t\t\tallOptions = angular.copy(nv);\n\t\t\t\t\t\tscope.options = angular.copy(nv);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tallOptions = nv.map(function (item, idx) {\n\t\t\t\t\t\t\treturn [idx, angular.copy(item)];\n\t\t\t\t\t\t});\n\t\t\t\t\t\tscope.options = angular.copy(allOptions);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// getting options template\n\t\t\t\tvar opt = iElement[0].querySelector('.option');\n\t\t\t\tif (!opt) {\n\t\t\t\t\tthrow new Error({\n\t\t\t\t\t\tname: 'modalSelectError:noOptionTemplate',\n\t\t\t\t\t\tmessage: 'When using modalSelect directive you must include an element with class \"option\"\\n\\t\\t\\t\\t\\t\\t to provide a template for your select options.',\n\t\t\t\t\t\ttoString: function toString() {\n\t\t\t\t\t\t\treturn this.name + \" \" + this.message;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tscope.inner = angular.element(opt).html();\n\t\n\t\t\t\t//add support for .remove for older devices\n\t\t\t\tif (!('remove' in Element.prototype)) {\n\t\t\t\t\tElement.prototype.remove = function () {\n\t\t\t\t\t\tthis.parentNode.removeChild(this);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\n\t\t\t\tangular.element(opt).remove();\n\t\n\t\t\t\tvar notFound = iElement[0].querySelector('.not-found');\n\t\t\t\tif (notFound) {\n\t\t\t\t\tscope.notFound = angular.element(notFound).html();\n\t\t\t\t\tangular.element(notFound).remove();\n\t\t\t\t}\n\t\n\t\t\t\tfunction updateListMode() {\n\t\t\t\t\t//shortList controls wether using ng-repeat instead of collection-repeat\n\t\t\t\t\tif (iAttrs.useCollectionRepeat === \"true\") {\n\t\t\t\t\t\tshortList = false;\n\t\t\t\t\t} else if (iAttrs.useCollectionRepeat === \"false\") {\n\t\t\t\t\t\tshortList = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (typeof scope.options !== \"undefined\") {\n\t\t\t\t\t\t\tshortList = !!(scope.options.length < shortListBreak);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tscope.ui.shortList = shortList;\n\t\t\t\t}\n\t\n\t\t\t\tngModelController.$render = function () {\n\t\t\t\t\tscope.ui.value = ngModelController.$viewValue;\n\t\t\t\t};\n\t\n\t\t\t\tvar getSelectedValue = scope.getSelectedValue = function (option) {\n\t\t\t\t\tvar val = null;\n\t\t\t\t\tif (option === null || option === undefined) {\n\t\t\t\t\t\treturn option;\n\t\t\t\t\t}\n\t\t\t\t\tif (onOptionSelect) {\n\t\t\t\t\t\treturn scope.optionGetter({ option: option });\n\t\t\t\t\t}\n\t\t\t\t\tif (setFromProperty) {\n\t\t\t\t\t\tval = option[setFromProperty];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tval = option;\n\t\t\t\t\t}\n\t\t\t\t\treturn val;\n\t\t\t\t};\n\t\n\t\t\t\tscope.setOption = function (option) {\n\t\t\t\t\tvar oldValue = ngModelController.$viewValue;\n\t\t\t\t\tvar val = getSelectedValue(option);\n\t\t\t\t\tngModelController.$setViewValue(val);\n\t\t\t\t\tngModelController.$render();\n\t\n\t\t\t\t\tif (scope.onSelect) {\n\t\t\t\t\t\tscope.onSelect({ newValue: val, oldValue: oldValue });\n\t\t\t\t\t}\n\t\t\t\t\tscope.modal.hide().then(function () {\n\t\t\t\t\t\tscope.showList = false;\n\t\t\t\t\t\tif (scope.ui.hasSearch) {\n\t\t\t\t\t\t\tif (clearSearchOnSelect) {\n\t\t\t\t\t\t\t\tscope.ui.searchValue = '';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t};\n\t\n\t\t\t\t// Filter object {id: <filterId>, active: <boolean>}\n\t\t\t\t// Used as auxiliary query params when querying server for search results\n\t\t\t\tscope.setFilter = function (filterId) {\n\t\t\t\t\tangular.forEach(scope.searchFilters, function (filter) {\n\t\t\t\t\t\tif (filter.id == filterId) {\n\t\t\t\t\t\t\tfilter.active = !filter.active;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfilter.active = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\n\t\t\t\t\t// Trigger another search when the search filters change\n\t\t\t\t\tif (scope.onSearch) {\n\t\t\t\t\t\tscope.onSearch({ query: scope.ui.searchValue });\n\t\t\t\t\t}\n\t\t\t\t};\n\t\n\t\t\t\tscope.unsetValue = function () {\n\t\t\t\t\t$timeout(function () {\n\t\t\t\t\t\tngModelController.$setViewValue(\"\");\n\t\t\t\t\t\tngModelController.$render();\n\t\t\t\t\t\tscope.modal.hide();\n\t\t\t\t\t\tscope.showList = false;\n\t\t\t\t\t\tif (scope.onReset && angular.isFunction(scope.onReset)) {\n\t\t\t\t\t\t\tscope.onReset();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t};\n\t\n\t\t\t\tscope.setValues = function () {\n\t\t\t\t\tvar checkedItems = [];\n\t\t\t\t\tangular.forEach(scope.isChecked, function (v, k) {\n\t\t\t\t\t\tif (v) {\n\t\t\t\t\t\t\tcheckedItems.push(allOptions[k][1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tvar oldValues = ngModelController.$viewValue;\n\t\t\t\t\tvar vals = checkedItems.map(function (item) {\n\t\t\t\t\t\treturn getSelectedValue(item);\n\t\t\t\t\t});\n\t\t\t\t\tngModelController.$setViewValue(vals);\n\t\t\t\t\tngModelController.$render();\n\t\n\t\t\t\t\tif (scope.onSelect) {\n\t\t\t\t\t\tscope.onSelect({ newValue: vals, oldValue: oldValues });\n\t\t\t\t\t}\n\t\t\t\t\tscope.modal.hide().then(function () {\n\t\t\t\t\t\tscope.showList = false;\n\t\t\t\t\t\tif (scope.ui.hasSearch) {\n\t\t\t\t\t\t\tif (clearSearchOnSelect) {\n\t\t\t\t\t\t\t\tscope.ui.searchValue = '';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t};\n\t\n\t\t\t\tscope.unsetValues = function () {\n\t\t\t\t\t$timeout(function () {\n\t\t\t\t\t\tngModelController.$setViewValue(multipleNullValue);\n\t\t\t\t\t\tngModelController.$render();\n\t\t\t\t\t\tscope.isChecked = {};\n\t\t\t\t\t\tscope.modal.hide();\n\t\t\t\t\t\tscope.showList = false;\n\t\t\t\t\t\tif (scope.onReset && angular.isFunction(scope.onReset)) {\n\t\t\t\t\t\t\tscope.onReset();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t};\n\t\n\t\t\t\tscope.closeModal = function () {\n\t\t\t\t\tscope.modal.hide().then(function () {\n\t\t\t\t\t\tscope.showList = false;\n\t\t\t\t\t});\n\t\t\t\t};\n\t\n\t\t\t\tscope.compareValues = function (a, b) {\n\t\t\t\t\treturn angular.equals(a, b);\n\t\t\t\t};\n\t\n\t\t\t\t//loading the modal\n\t\t\t\tvar modalTpl = null;\n\t\t\t\tif (iAttrs.searchTemplate) {\n\t\t\t\t\tscope.modal = $ionicModal.fromTemplate($templateCache.get(iAttrs.searchTemplate), { scope: scope });\n\t\t\t\t} else {\n\t\t\t\t\tmodalTpl = multiple ? modalTemplateMultiple : modalTemplate;\n\t\t\t\t\tscope.modal = $ionicModal.fromTemplate(modalTpl, { scope: scope });\n\t\t\t\t}\n\t\n\t\t\t\tvar hiddenCb = null;\n\t\t\t\tscope.$on('$destroy', function () {\n\t\t\t\t\tif (hiddenCb) {\n\t\t\t\t\t\thiddenCb();\n\t\t\t\t\t\thiddenCb = null;\n\t\t\t\t\t}\n\t\t\t\t\tscope.modal.remove();\n\t\t\t\t});\n\t\n\t\t\t\tif (scope.onClose && angular.isFunction(scope.onClose)) {\n\t\t\t\t\thiddenCb = scope.$on('modal.hidden', function () {\n\t\t\t\t\t\tscope.onClose();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\n\t\t\t\tiElement.on('click', function () {\n\t\t\t\t\tif (shortList) {\n\t\t\t\t\t\tscope.showList = true;\n\t\t\t\t\t\tscope.modal.show();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tscope.modal.show().then(function () {\n\t\t\t\t\t\t\tscope.showList = true;\n\t\t\t\t\t\t\tscope.ui.shortList = shortList;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\n\t\t\t\t//filter function\n\t\t\t\tif (scope.ui.hasSearch) {\n\t\t\t\t\tscope.$watch('ui.searchValue', function (nv) {\n\t\t\t\t\t\tvar whatToSearch;\n\t\t\t\t\t\tif (!multiple) {\n\t\t\t\t\t\t\twhatToSearch = allOptions;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\twhatToSearch = allOptions.map(function (item) {\n\t\t\t\t\t\t\t\treturn item[1];\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif (iAttrs.onSearch) {\n\t\t\t\t\t\t\tscope.onSearch({ query: nv });\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar filteredOpts = $filter('filter')(whatToSearch, nv, function (actual, expected) {\n\t\t\t\t\t\t\t\tif (!actual) {\n\t\t\t\t\t\t\t\t\t// if actual is an empty string, empty object, null, or undefined\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (searchProperties) {\n\t\t\t\t\t\t\t\t\tif ((typeof actual === 'undefined' ? 'undefined' : _typeof(actual)) == 'object') {\n\t\t\t\t\t\t\t\t\t\tfor (var i = 0; i < searchProperties.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\tif (actual[searchProperties[i]] && actual[searchProperties[i]].toLowerCase().indexOf(expected.toLowerCase()) >= 0) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tif (actual.toString().toLowerCase().indexOf(expected.toLowerCase()) >= 0) {\n\t\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t});\n\t\n\t\t\t\t\t\t\tvar oldLen = scope.options.length;\n\t\t\t\t\t\t\tif (!multiple) {\n\t\t\t\t\t\t\t\tscope.options = filteredOpts;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t//#TODO: lots of loops here!\n\t\t\t\t\t\t\t\tvar newOpts = [];\n\t\t\t\t\t\t\t\tangular.forEach(filteredOpts, function (item) {\n\t\t\t\t\t\t\t\t\tvar originalItem = allOptions.find(function (it) {\n\t\t\t\t\t\t\t\t\t\treturn it[1] == item;\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tif (originalItem) {\n\t\t\t\t\t\t\t\t\t\tnewOpts.push(originalItem);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tscope.options = newOpts;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (oldLen != scope.options.length) {\n\t\t\t\t\t\t\t\t//#todo: should resize scroll or scroll up here\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tscope.clearSearch = function () {\n\t\t\t\t\t\tscope.ui.searchValue = '';\n\t\t\t\t\t};\n\t\t\t\t}\n\t\n\t\t\t\tscope.copyOpt = function (option) {\n\t\t\t\t\treturn angular.copy(option);\n\t\t\t\t};\n\t\n\t\t\t\t//#TODO ?: WRAP INTO $timeout?\n\t\t\t\tngModelController.$render();\n\t\t\t}\n\t\t};\n\t}\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <ion-modal-view class=\\\"ionic-select-modal\\\" ng-class=\\\"::ui.modalClass\\\">\\n\\n    <ion-header-bar ng-class=\\\"::ui.headerFooterClass\\\">\\n      <h1 class=\\\"title\\\">{{::ui.modalTitle}}</h1>\\n    </ion-header-bar>\\n\\n    <div class=\\\"bar bar-subheader item-input-inset\\\" ng-class=\\\"::ui.subHeaderClass\\\" ng-if=\\\"ui.hasSearch\\\">\\n      <label class=\\\"item-input-wrapper\\\">\\n        <i class=\\\"icon ion-ios-search placeholder-icon\\\"></i>\\n        <input type=\\\"search\\\" placeholder=\\\"{{::ui.searchPlaceholder}}\\\" ng-model=\\\"ui.searchValue\\\">\\n\\n        <!-- To clear text: show X in the right corner of the text box. Only show when ui.hideFooter is on -->\\n        <a ng-if=\\\"ui.searchValue.length\\\" ng-show=\\\"::!ui.hideFooter\\\" on-tap=\\\"clearSearch()\\\" class=\\\"input-button button-dark icon ion-android-close\\\"></a>\\n      </label>\\n      <!-- When don't show footer, user can cancel from search bar button -->\\n      <button ng-if=\\\"::ui.hideFooter\\\" type=\\\"button\\\" class=\\\"button button-clear\\\" ng-click=\\\"clearSearch()\\\">\\n        {{ ui.cancelSearchButton }}\\n      </button>\\n      <button ng-if=\\\"::!ui.hideFooter\\\" type=\\\"button\\\" class=\\\"button button-clear\\\" ng-click=\\\"closeModal()\\\">\\n        {{ ui.cancelButton }}\\n      </button>\\n    </div>\\n\\n    <ion-content class=\\\"has-header\\\" ng-class=\\\"{'has-subheader':ui.hasSearch}\\\">\\n    <div class=\\\"text-center\\\" ng-if=\\\"!ui.shortList && !showList\\\" style=\\\"padding-top:40px;\\\">\\n        <h4 class=\\\"muted\\\">{{::ui.loadListMessage}}</h4>\\n        <p>\\n            <ion-spinner></ion-spinner>\\n        </p>\\n    </div>\\n\\n    <div ng-if=\\\"showList\\\">\\n        <!--collection-repeat mode -->\\n        <!-- not working right now -->\\n        <!--\\n        <div ng-if=\\\"!ui.shortList\\\" >\\n            <div class=\\\"list\\\" class=\\\"animate-if\\\" >\\n                <div\\n                    class=\\\"item item-checkbox\\\" ng-class=\\\"ui.itemClass\\\"\\n                     collection-repeat=\\\"optionm in options track by $index\\\">\\n                    <label class=\\\"checkbox\\\">\\n                        <input type=\\\"checkbox\\\" ng-model=\\\"isChecked[optionm[0]]\\\">\\n                    </label>\\n\\n                    <div compile=\\\"inner\\\" ng-init=\\\"option=optionm[1]\\\" compile-once=\\\"false\\\"></div>\\n\\n                </div>\\n            </div>\\n        </div>\\n        -->\\n\\n        <!-- ng-repeat mode -->\\n        <div ng-if=\\\"ui.shortList || true\\\">\\n            <div class=\\\"list\\\">\\n                <div\\n                  class=\\\"item item-checkbox\\\" ng-class=\\\"ui.itemClass\\\"\\n                  ng-repeat=\\\"optionm in options track by optionm[0]\\\">\\n                    <label class=\\\"checkbox\\\">\\n                        <input type=\\\"checkbox\\\" ng-model=\\\"isChecked[optionm[0]]\\\">\\n                    </label>\\n                    <div ng-init=\\\"option=optionm[1]\\\" compile=\\\"inner\\\" compile-once=\\\"true\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    </ion-content>\\n    <ion-footer-bar ng-if=\\\"::!ui.hideFooter\\\" ng-class=\\\"::ui.headerFooterClass\\\">\\n        <button class=\\\"button button-stable\\\" ng-click=\\\"closeModal()\\\">{{ui.cancelButton}}</button>\\n        <div class=\\\"title\\\" style=\\\"padding-top:6px\\\">\\n            <button class=\\\"button button-navbar\\\" ng-click=\\\"setValues()\\\">OK</button>\\n        </div>\\n        <button ng-if=\\\"::!ui.hideReset\\\" class=\\\"button button-stable\\\" ng-click=\\\"unsetValues()\\\">{{ui.resetButton}}</button>\\n    </ion-footer-bar>\\n</ion-modal-view>\\n\"\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <ion-modal-view class=\\\"ionic-select-modal\\\" ng-class=\\\"::ui.modalClass\\\">\\n\\n    <ion-header-bar ng-class=\\\"::ui.headerFooterClass\\\">\\n      <h1 class=\\\"title\\\">{{::ui.modalTitle}}</h1>\\n      <!-- If doesnt have footer user can cancel from Header -->\\n      <button class=\\\"button button-icon\\\" \\n              ng-click=\\\"closeModal()\\\"\\n              ng-if=\\\"ui.hideFooter && !ui.hasSearch\\\">\\n              <i class=\\\"icon ion-ios-close-empty\\\"></i>\\n      </button>\\n    </ion-header-bar>\\n\\n    <div class=\\\"bar bar-subheader item-input-inset\\\" ng-class=\\\"::ui.subHeaderClass\\\" ng-if=\\\"ui.hasSearch\\\">\\n      <label class=\\\"item-input-wrapper\\\">\\n        <i class=\\\"icon ion-ios-search placeholder-icon\\\"></i>\\n        <input type=\\\"search\\\" autocorrect=\\\"off\\\" placeholder=\\\"{{::ui.searchPlaceholder}}\\\" ng-model=\\\"ui.searchValue\\\">\\n        \\n        <!-- To clear text: show X in the right corner of the text box. Only show when ui.hideFooter is on -->\\n        <a ng-if=\\\"ui.searchValue.length\\\" ng-show=\\\"ui.hideFooter\\\" on-tap=\\\"clearSearch()\\\" class=\\\"input-button button-dark icon ion-android-close\\\"></a>\\n      </label>\\n      <!-- When don't show footer, user can cancel from search bar button -->\\n      <button ng-if=\\\"!ui.hideFooter\\\" type=\\\"button\\\" class=\\\"button button-clear\\\" ng-click=\\\"clearSearch()\\\">\\n        {{ ui.cancelSearchButton }}\\n      </button>\\n      <button ng-if=\\\"ui.hideFooter\\\" type=\\\"button\\\" class=\\\"button button-clear\\\" ng-click=\\\"closeModal()\\\">\\n        {{ ui.cancelButton }}\\n      </button>\\n    </div>\\n\\n    <ion-content class=\\\"has-header\\\" ng-class=\\\"{'has-subheader':ui.hasSearch}\\\">\\n        <div class=\\\"text-center\\\" ng-if=\\\"!ui.shortList && !showList\\\" style=\\\"padding-top:40px;\\\">\\n            <h4 class=\\\"muted\\\">{{::ui.loadListMessage}}</h4>\\n            <p>\\n                <ion-spinner></ion-spinner>\\n            </p>\\n        </div>\\n        <div ng-if=\\\"showList\\\">\\n            <div ng-if=\\\"!ui.shortList\\\">\\n                <div class=\\\"list\\\" ng-if=\\\"showList\\\" class=\\\"animate-if\\\">\\n                    <div\\n                      ng-class=\\\"{ '{{::ui.itemClass}}' : true, '{{::ui.selectedClass}}': compareValues(getSelectedValue(option), ui.value) }\\\"\\n                      collection-repeat=\\\"option in options track by $index\\\"\\n                      ng-click=\\\"setOption(option)\\\"\\n                      ng-class=\\\"{'{{::ui.selectedClass}}': compareValues(getSelectedValue(option), ui.value) }\\\">\\n                        <div compile=\\\"inner\\\" compile-once=\\\"true\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div ng-if=\\\"ui.shortList\\\">\\n                <div class=\\\"list\\\">\\n                    <div\\n                      ng-repeat=\\\"option in options track by $index\\\"\\n                      ng-click=\\\"setOption(option)\\\"\\n                      ng-class=\\\"{ '{{::ui.itemClass}}' : true, '{{::ui.selectedClass}}': compareValues(getSelectedValue(option), ui.value) }\\\">\\n                        <div compile=\\\"inner\\\" compile-once=\\\"true\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div ng-if=\\\"notFound && options.length == 0\\\">\\n            <div compile=\\\"notFound\\\" compile-once=\\\"true\\\" ng-click=\\\"closeModal()\\\"></div>\\n        </div>\\n\\n    </ion-content>\\n\\n    <ion-footer-bar ng-if=\\\"!ui.hideFooter\\\" ng-class=\\\"::ui.headerFooterClass\\\">\\n        <button type=\\\"button\\\" class=\\\"button button-stable modal-select-close-button\\\" ng-click=\\\"closeModal()\\\">{{ui.cancelButton}}</button>\\n        <button type=\\\"button\\\" ng-if=\\\"::!ui.hideReset\\\" class=\\\"button button-stable\\\" ng-click=\\\"unsetValue()\\\">{{ui.resetButton}}</button>\\n    </ion-footer-bar>\\n\\n</ion-modal-view>\\n\"\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// ionic-modal-select.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap cd92435a6fdee0dd38df","import \"./ionic-modal-select.js\";\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","/*!\n * Copyright 2015 Inmagik SRL.\n * http://www.inmagik.com/\n *\n * ionic-modal-select, v1.3.2\n * Modal select directive for Ionic framework.\n *\n * By @bianchimro\n *\n * Licensed under the MIT license. Please see LICENSE for more information.\n *\n */\n\nangular.module('ionic-modal-select', [])\n.directive('compile', compile)\n.directive('modalSelect', modalSelect);\n\n\nfunction compile($compile) {\n\treturn function(scope, iElement, iAttrs) {\n\t\tvar x = scope.$watch(\n\t\t\tfunction(scope) {\n\t\t\t\t// watch the 'compile' expression for changes\n\t\t\t\treturn scope.$eval(iAttrs.compile);\n\t\t\t},\n\t\t\tfunction(value) {\n\t\t\t\t// when the 'compile' expression changes\n\t\t\t\t// assign it into the current DOM\n\t\t\t\tiElement.html(value);\n\n\t\t\t\t// compile the new DOM and link it to the current\n\t\t\t\t// scope.\n\t\t\t\t// NOTE: we only compile .childNodes so that\n\t\t\t\t// we don't get into infinite loop compiling ourselves\n\t\t\t\t$compile(iElement.contents())(scope);\n\n\t\t\t\t//deactivate watch if \"compile-once\" is set to \"true\"\n\t\t\t\tif (iAttrs.compileOnce === 'true') {\n\t\t\t\t\tx();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t};\n}\n\n\nfunction modalSelect($ionicModal, $timeout, $filter, $parse, $templateCache ) {\n\n\t\tconst modalTemplateMultiple = require('raw!./modal-template-multiple.html');\n\t\tconst modalTemplate = require('raw!./modal-template.html');\n\n\t\treturn {\n\t\t\trestrict: 'A',\n\t\t\trequire : 'ngModel',\n\t\t\tscope: {\n\t\t\t\tinitialOptions:\"=options\",\n\t\t\t\toptionGetter:\"&\",\n\t\t\t\tsearchFilters: \"=searchFilters\",\n\t\t\t\tsearchProperties:'=',\n\t\t\t\tonSelect: \"&\",\n\t\t\t\tonSearch: \"&\",\n\t\t\t\tonReset: \"&\",\n\t\t\t\tonClose: \"&\",\n\t\t\t},\n\t\t\tlink: function (scope, iElement, iAttrs, ngModelController, transclude) {\n\n\t\t\t\tvar shortList = true;\n\t\t\t\tvar shortListBreak = iAttrs.shortListBreak ? parseInt(iAttrs.shortListBreak) : 10;\n\t\t\t\tvar setFromProperty= iAttrs.optionProperty;\n\t\t\t\tvar onOptionSelect = iAttrs.optionGetter;\n\t\t\t\tvar clearSearchOnSelect = iAttrs.clearSearchOnSelect !== \"false\" ? true : false;\n\t\t\t\tvar searchProperties = scope.searchProperties  ? scope.searchProperties : false;\n\n\t\t\t\t//multiple values settings.\n\t\t\t\tvar multiple = iAttrs.multiple  ? true : false;\n\t\t\t\tif (multiple) {\n\t\t\t\t\t\tscope.isChecked = {};\n\t\t\t\t}\n\t\t\t\tvar multipleNullValue = iAttrs.multipleNullValue ? scope.$eval(iAttrs.multipleNullValue) : [];\n\n\t\t\t\tscope.ui = {\n\t\t\t\t\tmodalTitle : iAttrs.modalTitle || 'Select an option',\n\t\t\t\t\tokButton : iAttrs.okButton || 'OK',\n\t\t\t\t\thideReset : iAttrs.hideReset  !== \"true\" ? false : true,\n\t\t\t\t\thideFooter : iAttrs.hideFooter  === \"true\" ? true : true,\n\t\t\t\t\tresetButton : iAttrs.resetButton || 'Reset',\n\t\t\t\t\tcancelButton : iAttrs.cancelButton || 'Cancel',\n\t\t\t\t\tloadListMessage : iAttrs.loadListMessage || 'Loading',\n\t\t\t\t\tmodalClass : iAttrs.modalClass || '',\n\t\t\t\t\theaderFooterClass : iAttrs.headerFooterClass || 'bar-stable',\n\t\t\t\t\tvalue  : null,\n\t\t\t\t\tselectedClass : iAttrs.selectedClass || 'option-selected',\n\t\t\t\t\titemClass: iAttrs.itemClass || 'item item-text-wrap',\n\t\t\t\t\tsearchTemplate: iAttrs.searchTemplate || (multiple ? modalTemplateMultiple : modalTemplate),\n\n\t\t\t\t\t//search stuff\n\t\t\t\t\thasSearch : iAttrs.hasSearch  !== \"true\" ? false : true,\n\t\t\t\t\tsearchValue : '',\n\t\t\t\t\tsearchPlaceholder : iAttrs.searchPlaceholder || 'Search',\n\t\t\t\t\tsubHeaderClass : iAttrs.subHeaderClass || 'bar-stable',\n\t\t\t\t\tcancelSearchButton : iAttrs.cancelSearchButton || 'Clear'\n\n\t\t\t\t};\n\n\t\t\t\tvar allOptions = [];\n\t\t\t\tscope.options = [];\n\n\t\t\t\tif (iAttrs.optionsExpression) {\n\t\t\t\t\t\tvar optionsExpression = iAttrs.optionsExpression;\n\t\t\t\t\t\tvar match = optionsExpression.match(/^\\s*([\\s\\S]+?)\\s+in\\s+([\\s\\S]+?)(?:\\s+track\\s+by\\s+([\\s\\S]+?))?\\s*$/);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\t\tthrow new Error(\"collection-repeat expected expression in form of '_item_ in \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"_collection_[ track by _id_]' but got '\" + iAttrs.optionsExpression + \"'.\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//var keyExpr = match[1];\n\t\t\t\t\t\tvar listExpr = match[2];\n\t\t\t\t\t\tvar listGetter = $parse(listExpr);\n\t\t\t\t\t\tvar s = iElement.scope();\n\n\t\t\t\t\t\tscope.$watch(\n\t\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\t\t\treturn listGetter(s);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t(nv, ov) => {\n\t\t\t\t\t\t\t\t\t\tinitialOptionsSetup(nv);\n\t\t\t\t\t\t\t\t\t\tupdateListMode();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t);\n\n\t\t\t\t} else {\n\t\t\t\t\t\tscope.$watchCollection('initialOptions', function(nv){\n\t\t\t\t\t\t\t\tinitialOptionsSetup(nv);\n\t\t\t\t\t\t\t\tupdateListMode();\n\t\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t//#TODO: this is due to different single vs multiple template\n\t\t\t\t//but adds lots of complexity here and in search\n\t\t\t\tfunction initialOptionsSetup(nv){\n\t\t\t\t\t\tnv = nv || [];\n\t\t\t\t\t\tif ( !multiple ) {\n\t\t\t\t\t\t\t\tallOptions = angular.copy(nv);\n\t\t\t\t\t\t\t\tscope.options = angular.copy(nv);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tallOptions = nv.map((item, idx) => [idx, angular.copy(item)] );\n\t\t\t\t\t\t\t\tscope.options = angular.copy(allOptions);\n\t\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// getting options template\n\t\t\t\tvar opt = iElement[0].querySelector('.option');\n\t\t\t\tif (!opt) {\n\t\t\t\t\tthrow new Error({\n\t\t\t\t\t\tname:'modalSelectError:noOptionTemplate',\n\t\t\t\t\t\tmessage:`When using modalSelect directive you must include an element with class \"option\"\n\t\t\t\t\t\t to provide a template for your select options.`,\n\t\t\t\t\t\ttoString:function(){\n\t\t\t\t\t\t\treturn this.name + \" \" + this.message;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tscope.inner = angular.element(opt).html();\n\n\t\t\t\t//add support for .remove for older devices\n\t\t\t\tif (!('remove' in Element.prototype)) {\n\t\t\t\t\tElement.prototype.remove = function() {\n\t\t\t\t\t\tthis.parentNode.removeChild(this);\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tangular.element(opt).remove();\n\n\t\t\t\tvar notFound = iElement[0].querySelector('.not-found');\n\t\t\t\tif(notFound) {\n\t\t\t\t\tscope.notFound = angular.element(notFound).html();\n\t\t\t\t\tangular.element(notFound).remove();\n\t\t\t\t}\n\n\t\t\t\tfunction updateListMode(){\n\t\t\t\t\t//shortList controls wether using ng-repeat instead of collection-repeat\n\t\t\t\t\tif (iAttrs.useCollectionRepeat === \"true\") {\n\t\t\t\t\t\tshortList = false;\n\t\t\t\t\t} else if (iAttrs.useCollectionRepeat === \"false\") {\n\t\t\t\t\t\tshortList = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (typeof(scope.options) !==\"undefined\"){\n\t\t\t\t\t\t\tshortList = !!(scope.options.length < shortListBreak);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.ui.shortList = shortList;\n\t\t\t\t}\n\n\t\t\t\tngModelController.$render = function(){\n\t\t\t\t\tscope.ui.value = ngModelController.$viewValue;\n\t\t\t\t};\n\n\t\t\t\tvar getSelectedValue = scope.getSelectedValue = function(option){\n\t\t\t\t\tvar val = null;\n\t\t\t\t\tif (option === null || option === undefined) {\n\t\t\t\t\t\treturn option;\n\t\t\t\t\t}\n\t\t\t\t\tif (onOptionSelect) {\n\t\t\t\t\t\treturn scope.optionGetter({option:option});\n\t\t\t\t\t}\n\t\t\t\t\tif (setFromProperty) {\n\t\t\t\t\t\tval = option[setFromProperty];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tval = option;\n\t\t\t\t\t}\n\t\t\t\t\treturn val;\n\t\t\t\t};\n\n\t\t\t\tscope.setOption = function(option){\n\t\t\t\t\tvar oldValue = ngModelController.$viewValue;\n\t\t\t\t\tvar val = getSelectedValue(option);\n\t\t\t\t\tngModelController.$setViewValue(val);\n\t\t\t\t\tngModelController.$render();\n\n\t\t\t\t\tif (scope.onSelect) {\n\t\t\t\t\t\tscope.onSelect({ newValue: val, oldValue: oldValue });\n\t\t\t\t\t}\n\t\t\t\t\tscope.modal.hide().then(function(){\n\t\t\t\t\t\tscope.showList = false;\n\t\t\t\t\t\tif (scope.ui.hasSearch) {\n\t\t\t\t\t\t\tif(clearSearchOnSelect) {\n\t\t\t\t\t\t\t\tscope.ui.searchValue = '';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\t// Filter object {id: <filterId>, active: <boolean>}\n\t\t\t\t// Used as auxiliary query params when querying server for search results\n\t\t\t\tscope.setFilter = function(filterId) {\n\t\t\t\t\tangular.forEach(scope.searchFilters, function(filter) {\n\t\t\t\t\t\tif(filter.id == filterId) {\n\t\t\t\t\t\t\tfilter.active = !filter.active;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfilter.active = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\t// Trigger another search when the search filters change\n\t\t\t\t\tif(scope.onSearch) {\n\t\t\t\t\t\tscope.onSearch({query: scope.ui.searchValue});\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tscope.unsetValue = function(){\n\t\t\t\t\t$timeout(function(){\n\t\t\t\t\t\tngModelController.$setViewValue(\"\");\n\t\t\t\t\t\tngModelController.$render();\n\t\t\t\t\t\tscope.modal.hide();\n\t\t\t\t\t\tscope.showList = false;\n\t\t\t\t\t\tif (scope.onReset && angular.isFunction(scope.onReset)) {\n\t\t\t\t\t\t\tscope.onReset();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\tscope.setValues = function(){\n\t\t\t\t\t\tvar checkedItems = [];\n\t\t\t\t\t\tangular.forEach(scope.isChecked, function(v, k){\n\t\t\t\t\t\t\t\tif(v){\n\t\t\t\t\t\t\t\t\t\tcheckedItems.push(allOptions[k][1])\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tvar oldValues = ngModelController.$viewValue;\n\t\t\t\t\t\tvar vals = checkedItems.map(function(item){\n\t\t\t\t\t\t\t\treturn getSelectedValue(item);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tngModelController.$setViewValue(vals);\n\t\t\t\t\t\tngModelController.$render();\n\n\t\t\t\t\t\tif (scope.onSelect) {\n\t\t\t\t\t\t\t\tscope.onSelect({ newValue: vals, oldValue: oldValues });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tscope.modal.hide().then(function(){\n\t\t\t\t\t\t\t\tscope.showList = false;\n\t\t\t\t\t\t\t\tif (scope.ui.hasSearch) {\n\t\t\t\t\t\t\t\t\t if(clearSearchOnSelect){\n\t\t\t\t\t\t\t\t\t\t\t\tscope.ui.searchValue = '';\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t};\n\n\t\t\t\tscope.unsetValues = function(){\n\t\t\t\t\t\t$timeout(function(){\n\t\t\t\t\t\t\t\tngModelController.$setViewValue(multipleNullValue);\n\t\t\t\t\t\t\t\tngModelController.$render();\n\t\t\t\t\t\t\t\tscope.isChecked = {};\n\t\t\t\t\t\t\t\tscope.modal.hide();\n\t\t\t\t\t\t\t\tscope.showList = false;\n\t\t\t\t\t\t\t\tif (scope.onReset && angular.isFunction(scope.onReset)) {\n\t\t\t\t\t\t\t\t\t\tscope.onReset();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\tscope.closeModal = function(){\n\t\t\t\t\tscope.modal.hide().then(function(){\n\t\t\t\t\t\tscope.showList = false;\n\t\t\t\t\t});\n\t\t\t\t};\n\n\n\t\t\t\tscope.compareValues = function(a, b){\n\t\t\t\t\treturn angular.equals(a, b);\n\t\t\t\t};\n\n\t\t\t\t//loading the modal\n\t\t\t\tvar modalTpl = null;\n\t\t\t\tif(iAttrs.searchTemplate) {\n\t\t\t\t\tscope.modal = $ionicModal.fromTemplate(\n\t\t\t\t\t\t$templateCache.get(iAttrs.searchTemplate),\n\t\t\t\t\t\t{ scope: scope }\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tmodalTpl = multiple ? modalTemplateMultiple : modalTemplate;\n\t\t\t\t\tscope.modal = $ionicModal.fromTemplate(\n\t\t\t\t\t\tmodalTpl,\n\t\t\t\t\t\t{ scope: scope }\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tlet hiddenCb = null;\n\t\t\t\tscope.$on('$destroy', function(){\n\t\t\t\t\tif(hiddenCb){\n\t\t\t\t\t\t\thiddenCb();\n\t\t\t\t\t\t\thiddenCb = null;\n\t\t\t\t\t}\n\t\t\t\t\tscope.modal.remove();\n\t\t\t\t});\n\n\t\t\t\tif (scope.onClose && angular.isFunction(scope.onClose)) {\n\t\t\t\t\thiddenCb = scope.$on('modal.hidden', function(){\n\t\t\t\t\t\tscope.onClose();\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tiElement.on('click', function(){\n\t\t\t\t\tif (shortList) {\n\t\t\t\t\t\tscope.showList = true;\n\t\t\t\t\t\tscope.modal.show();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tscope.modal.show()\n\t\t\t\t\t\t\t.then(function(){\n\t\t\t\t\t\t\t\tscope.showList = true;\n\t\t\t\t\t\t\t\tscope.ui.shortList = shortList;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\n\t\t\t\t//filter function\n\t\t\t\tif (scope.ui.hasSearch) {\n\t\t\t\t\tscope.$watch('ui.searchValue', function(nv){\n\t\t\t\t\t\tvar whatToSearch;\n\t\t\t\t\t\tif ( !multiple  ) {\n\t\t\t\t\t\t\t\twhatToSearch = allOptions;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\twhatToSearch = allOptions.map(function(item){\n\t\t\t\t\t\t\t\t\t\treturn item[1];\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(iAttrs.onSearch) {\n\t\t\t\t\t\t\t\tscope.onSearch({query: nv});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar filteredOpts = $filter('filter')(whatToSearch, nv, function(actual, expected) {\n\t\t\t\t\t\t\t\tif(!actual){\n\t\t\t\t\t\t\t\t\t// if actual is an empty string, empty object, null, or undefined\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (searchProperties){\n\t\t\t\t\t\t\t\t\tif (typeof actual == 'object'){\n\t\t\t\t\t\t\t\t\t\tfor (var i = 0; i < searchProperties.length; i++){\n\t\t\t\t\t\t\t\t\t\t\tif (actual[searchProperties[i]] && actual[searchProperties[i]].toLowerCase().indexOf(expected.toLowerCase()) >= 0){\n\t\t\t\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tif(actual.toString().toLowerCase().indexOf(expected.toLowerCase()) >= 0){\n\t\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tvar oldLen = scope.options.length;\n\t\t\t\t\t\t\tif ( !multiple ){\n\t\t\t\t\t\t\t\t\tscope.options = filteredOpts;\n\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t//#TODO: lots of loops here!\n\t\t\t\t\t\t\t\t\tvar newOpts = [];\n\t\t\t\t\t\t\t\t\tangular.forEach(filteredOpts, function(item){\n\t\t\t\t\t\t\t\t\t\t\tvar originalItem = allOptions.find(function(it){\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn it[1] == item;\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\tif( originalItem ){\n\t\t\t\t\t\t\t\t\t\t\t\t\tnewOpts.push(originalItem);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tscope.options = newOpts;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(oldLen != scope.options.length){\n\t\t\t\t\t\t\t\t//#todo: should resize scroll or scroll up here\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tscope.clearSearch = function(){\n\t\t\t\t\t\tscope.ui.searchValue = '';\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tscope.copyOpt = option => {\n\t\t\t\t\treturn angular.copy(option);\n\t\t\t\t}\n\n\t\t\t\t//#TODO ?: WRAP INTO $timeout?\n\t\t\t\tngModelController.$render();\n\n\t\t\t}\n\t\t};\n\t}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ionic-modal-select.js","module.exports = \" <ion-modal-view class=\\\"ionic-select-modal\\\" ng-class=\\\"::ui.modalClass\\\">\\n\\n    <ion-header-bar ng-class=\\\"::ui.headerFooterClass\\\">\\n      <h1 class=\\\"title\\\">{{::ui.modalTitle}}</h1>\\n    </ion-header-bar>\\n\\n    <div class=\\\"bar bar-subheader item-input-inset\\\" ng-class=\\\"::ui.subHeaderClass\\\" ng-if=\\\"ui.hasSearch\\\">\\n      <label class=\\\"item-input-wrapper\\\">\\n        <i class=\\\"icon ion-ios-search placeholder-icon\\\"></i>\\n        <input type=\\\"search\\\" placeholder=\\\"{{::ui.searchPlaceholder}}\\\" ng-model=\\\"ui.searchValue\\\">\\n\\n        <!-- To clear text: show X in the right corner of the text box. Only show when ui.hideFooter is on -->\\n        <a ng-if=\\\"ui.searchValue.length\\\" ng-show=\\\"::!ui.hideFooter\\\" on-tap=\\\"clearSearch()\\\" class=\\\"input-button button-dark icon ion-android-close\\\"></a>\\n      </label>\\n      <!-- When don't show footer, user can cancel from search bar button -->\\n      <button ng-if=\\\"::ui.hideFooter\\\" type=\\\"button\\\" class=\\\"button button-clear\\\" ng-click=\\\"clearSearch()\\\">\\n        {{ ui.cancelSearchButton }}\\n      </button>\\n      <button ng-if=\\\"::!ui.hideFooter\\\" type=\\\"button\\\" class=\\\"button button-clear\\\" ng-click=\\\"closeModal()\\\">\\n        {{ ui.cancelButton }}\\n      </button>\\n    </div>\\n\\n    <ion-content class=\\\"has-header\\\" ng-class=\\\"{'has-subheader':ui.hasSearch}\\\">\\n    <div class=\\\"text-center\\\" ng-if=\\\"!ui.shortList && !showList\\\" style=\\\"padding-top:40px;\\\">\\n        <h4 class=\\\"muted\\\">{{::ui.loadListMessage}}</h4>\\n        <p>\\n            <ion-spinner></ion-spinner>\\n        </p>\\n    </div>\\n\\n    <div ng-if=\\\"showList\\\">\\n        <!--collection-repeat mode -->\\n        <!-- not working right now -->\\n        <!--\\n        <div ng-if=\\\"!ui.shortList\\\" >\\n            <div class=\\\"list\\\" class=\\\"animate-if\\\" >\\n                <div\\n                    class=\\\"item item-checkbox\\\" ng-class=\\\"ui.itemClass\\\"\\n                     collection-repeat=\\\"optionm in options track by $index\\\">\\n                    <label class=\\\"checkbox\\\">\\n                        <input type=\\\"checkbox\\\" ng-model=\\\"isChecked[optionm[0]]\\\">\\n                    </label>\\n\\n                    <div compile=\\\"inner\\\" ng-init=\\\"option=optionm[1]\\\" compile-once=\\\"false\\\"></div>\\n\\n                </div>\\n            </div>\\n        </div>\\n        -->\\n\\n        <!-- ng-repeat mode -->\\n        <div ng-if=\\\"ui.shortList || true\\\">\\n            <div class=\\\"list\\\">\\n                <div\\n                  class=\\\"item item-checkbox\\\" ng-class=\\\"ui.itemClass\\\"\\n                  ng-repeat=\\\"optionm in options track by optionm[0]\\\">\\n                    <label class=\\\"checkbox\\\">\\n                        <input type=\\\"checkbox\\\" ng-model=\\\"isChecked[optionm[0]]\\\">\\n                    </label>\\n                    <div ng-init=\\\"option=optionm[1]\\\" compile=\\\"inner\\\" compile-once=\\\"true\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    </ion-content>\\n    <ion-footer-bar ng-if=\\\"::!ui.hideFooter\\\" ng-class=\\\"::ui.headerFooterClass\\\">\\n        <button class=\\\"button button-stable\\\" ng-click=\\\"closeModal()\\\">{{ui.cancelButton}}</button>\\n        <div class=\\\"title\\\" style=\\\"padding-top:6px\\\">\\n            <button class=\\\"button button-navbar\\\" ng-click=\\\"setValues()\\\">OK</button>\\n        </div>\\n        <button ng-if=\\\"::!ui.hideReset\\\" class=\\\"button button-stable\\\" ng-click=\\\"unsetValues()\\\">{{ui.resetButton}}</button>\\n    </ion-footer-bar>\\n</ion-modal-view>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./src/modal-template-multiple.html\n// module id = 2\n// module chunks = 0","module.exports = \" <ion-modal-view class=\\\"ionic-select-modal\\\" ng-class=\\\"::ui.modalClass\\\">\\n\\n    <ion-header-bar ng-class=\\\"::ui.headerFooterClass\\\">\\n      <h1 class=\\\"title\\\">{{::ui.modalTitle}}</h1>\\n      <!-- If doesnt have footer user can cancel from Header -->\\n      <button class=\\\"button button-icon\\\" \\n              ng-click=\\\"closeModal()\\\"\\n              ng-if=\\\"ui.hideFooter && !ui.hasSearch\\\">\\n              <i class=\\\"icon ion-ios-close-empty\\\"></i>\\n      </button>\\n    </ion-header-bar>\\n\\n    <div class=\\\"bar bar-subheader item-input-inset\\\" ng-class=\\\"::ui.subHeaderClass\\\" ng-if=\\\"ui.hasSearch\\\">\\n      <label class=\\\"item-input-wrapper\\\">\\n        <i class=\\\"icon ion-ios-search placeholder-icon\\\"></i>\\n        <input type=\\\"search\\\" autocorrect=\\\"off\\\" placeholder=\\\"{{::ui.searchPlaceholder}}\\\" ng-model=\\\"ui.searchValue\\\">\\n        \\n        <!-- To clear text: show X in the right corner of the text box. Only show when ui.hideFooter is on -->\\n        <a ng-if=\\\"ui.searchValue.length\\\" ng-show=\\\"ui.hideFooter\\\" on-tap=\\\"clearSearch()\\\" class=\\\"input-button button-dark icon ion-android-close\\\"></a>\\n      </label>\\n      <!-- When don't show footer, user can cancel from search bar button -->\\n      <button ng-if=\\\"!ui.hideFooter\\\" type=\\\"button\\\" class=\\\"button button-clear\\\" ng-click=\\\"clearSearch()\\\">\\n        {{ ui.cancelSearchButton }}\\n      </button>\\n      <button ng-if=\\\"ui.hideFooter\\\" type=\\\"button\\\" class=\\\"button button-clear\\\" ng-click=\\\"closeModal()\\\">\\n        {{ ui.cancelButton }}\\n      </button>\\n    </div>\\n\\n    <ion-content class=\\\"has-header\\\" ng-class=\\\"{'has-subheader':ui.hasSearch}\\\">\\n        <div class=\\\"text-center\\\" ng-if=\\\"!ui.shortList && !showList\\\" style=\\\"padding-top:40px;\\\">\\n            <h4 class=\\\"muted\\\">{{::ui.loadListMessage}}</h4>\\n            <p>\\n                <ion-spinner></ion-spinner>\\n            </p>\\n        </div>\\n        <div ng-if=\\\"showList\\\">\\n            <div ng-if=\\\"!ui.shortList\\\">\\n                <div class=\\\"list\\\" ng-if=\\\"showList\\\" class=\\\"animate-if\\\">\\n                    <div\\n                      ng-class=\\\"{ '{{::ui.itemClass}}' : true, '{{::ui.selectedClass}}': compareValues(getSelectedValue(option), ui.value) }\\\"\\n                      collection-repeat=\\\"option in options track by $index\\\"\\n                      ng-click=\\\"setOption(option)\\\"\\n                      ng-class=\\\"{'{{::ui.selectedClass}}': compareValues(getSelectedValue(option), ui.value) }\\\">\\n                        <div compile=\\\"inner\\\" compile-once=\\\"true\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div ng-if=\\\"ui.shortList\\\">\\n                <div class=\\\"list\\\">\\n                    <div\\n                      ng-repeat=\\\"option in options track by $index\\\"\\n                      ng-click=\\\"setOption(option)\\\"\\n                      ng-class=\\\"{ '{{::ui.itemClass}}' : true, '{{::ui.selectedClass}}': compareValues(getSelectedValue(option), ui.value) }\\\">\\n                        <div compile=\\\"inner\\\" compile-once=\\\"true\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div ng-if=\\\"notFound && options.length == 0\\\">\\n            <div compile=\\\"notFound\\\" compile-once=\\\"true\\\" ng-click=\\\"closeModal()\\\"></div>\\n        </div>\\n\\n    </ion-content>\\n\\n    <ion-footer-bar ng-if=\\\"!ui.hideFooter\\\" ng-class=\\\"::ui.headerFooterClass\\\">\\n        <button type=\\\"button\\\" class=\\\"button button-stable modal-select-close-button\\\" ng-click=\\\"closeModal()\\\">{{ui.cancelButton}}</button>\\n        <button type=\\\"button\\\" ng-if=\\\"::!ui.hideReset\\\" class=\\\"button button-stable\\\" ng-click=\\\"unsetValue()\\\">{{ui.resetButton}}</button>\\n    </ion-footer-bar>\\n\\n</ion-modal-view>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./src/modal-template.html\n// module id = 3\n// module chunks = 0"],"sourceRoot":""}